一、数据结构的研究对象
1、如何利用软件单位B 有约束的 有机组合  利于某些算法的应用
2、组合行为上
	逻辑结构		分析问题
	存储结构		解决问题

逻辑结构：
	元素  和  元素   的关系
	1 : 1		线性关系	表结构
	1 : n		层次关系	树结构
	m : n		复杂关系	图结构
存储结构：
	顺序存储
	链式存储

顺序表		链式表	==>		顺序表		链表（单向链表 双向链表 单向循环链表 双向循环链表）
顺序树		链式树	==>		树的顺序存储	链式结构树
顺序图		链式图  ==>	 顶点（顺序存储）  边存储行为	（邻接矩阵  邻接表 ... ...）

研究 算法（动词）	普通动词（增删改查）	高级动词（并查集、堆排序...）

评价研究对象的动作  好坏
	时间复杂度
	空间复杂度

二、线性结构
定义

三、顺序表
	顺序表 ？？ 数组

数组：	多个元素的顺序组合		语法糖	定义时必须明确告诉编译器  数组（顺序表） 元素个数  元素类型
	int a;		fun(a);
	int b;		fun(b);
	int arr[5];	fun(arr);

	int m = a + b;
	int arr[m];		变长数组	编译器帮我们在编译时，将这个结构改成 顺序表（堆上申请）

编译时期、运行时期

.c gcc msvc  可执行文件 明确

栈空间
	生命周期：函数调用  函数返回
堆空间

那fun函数返回后，原来的a,b这些也是还在原地吗，只是这块内存找不到了。然后假如有新的声明能"恰好"用到这块内存，也会覆盖到这块内存原来的值吗